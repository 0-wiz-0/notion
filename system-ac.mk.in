##
## System settings
##


##
## Installation paths
##

prefix=@prefix@
exec_prefix=@exec_prefix@

# Unless you are creating a package conforming to some OS's standards, you
# probably do not want to modify the following directories:

# Main binaries
BINDIR=@bindir@
# Configuration .lua files
ETCDIR=@sysconfdir@/@PACKAGE_TARNAME@
# Some .lua files and ion-* shell scripts
SHAREDIR=@datadir@/@PACKAGE_TARNAME@
# Manual pages
MANDIR=@datadir@/man
# Some documents
DOCDIR=@datadir@/doc/@PACKAGE_TARNAME@
# Nothing at the moment
INCDIR=@includedir@
# Nothing at the moment
LIBDIR=@libdir@
# Modules
MODULEDIR=@libdir@/@PACKAGE_TARNAME@/mod
# Compiled Lua source code
LCDIR=@libdir@/@PACKAGE_TARNAME@/lc
# ion-completefile (does not belong in SHAREDIR being a binary file)
EXTRABINDIR=@libexecdir@/@PACKAGE_TARNAME@/bin
# For ion-completeman system-wide cache
#VARDIR=@localstatedir@/cache/@PACKAGE_TARNAME@
VARDIR=/var/cache/@PACKAGE_TARNAME@
# Message catalogs
LOCALEDIR=@prefix@/share/locale


##
## Modules
##

# Set PRELOAD_MODULES=1 if your system does not support dynamically loaded
# modules through 'libdl' or has non-standard naming conventions.
PRELOAD_MODULES=@PRELOAD_MODULES@

# Flags to link with libdl.
DL_LIBS=@DL_LIBS@


##
## Lua
##

# If you have installed Lua 5.0 from the official tarball without changing
# paths, this should do it.
#LUA_DIR=/usr/local
LUA_LIBS = @LUA_LIBS@
LUA_INCLUDES = @LUA_INCLUDES@
LUA=@LUA@
LUAC=@LUAC@

# If you are using the Debian packages, the following settings should be
# what you want.
#LUA_LIBS=`lua-config50 --libs`
#LUA_INCLUDES=`lua-config50 --include`
#LUA=lua50
#LUAC=luac50


##
## X libraries, includes and options
##

#X11_PREFIX=/usr/X11R6
# SunOS/Solaris
#X11_PREFIX=/usr/openwin

X11_LIBS=@X_EXTRA_LIBS@ @X_PRE_LIBS@ -lX11 @X_LIBS@
X11_INCLUDES=@X_CFLAGS@

# Change commenting to disable Xinerama support
XINERAMA_LIBS=@XINERAMA_LIBS@
DEFINES += @_DCF_NO_XINERAMA@

# XFree86 libraries up to 4.3.0 have a bug that will cause Ion to segfault
# if Opera is used when i18n support is enabled. The following setting
# should work around that situation.
DEFINES += @_DCF_XFREE86_TEXTPROP_BUG_WORKAROUND@

# Use the Xutf8 routines (XFree86 extension) instead of Xmb routines in
# an UTF8 locale given the -i18n command line option?
DEFINES += @_DCF_DE_USE_XUTF8@

# Remap F11 key to SunF36 and F12 to SunF37? You may want to set this
# on SunOS.
DEFINES += @_DCF_SUN_F1X_REMAP@


##
## libc
##

# You may uncomment this if you know your system has
# asprintf and vasprintf in the c library. (gnu libc has.)
# If HAS_SYSTEM_ASPRINTF is not defined, an implementation
# in sprintf_2.2/ is used.
HAS_SYSTEM_ASPRINTF=@HAS_SYSTEM_ASPRINTF@


# If you're on an archaic system (such as relatively recent *BSD releases)
# without even dummy multibyte/widechar and localisation support, you may
# have to uncomment the following line:
DEFINES += @_DCF_NO_LOCALE@


##
## C compiler
##

CC=@CC@

# Same as '-Wall -pedantic' without '-Wunused' as callbacks often
# have unused variables.
WARN=	-W -Wimplicit -Wreturn-type -Wswitch -Wcomment \
	-Wtrigraphs -Wformat -Wchar-subscripts \
	-Wparentheses -pedantic -Wuninitialized

CFLAGS=@CFLAGS@ $(WARN) $(DEFINES) $(EXTRA_INCLUDES) $(INCLUDES)
LDFLAGS=@LDFLAGS@ $(EXTRA_LIBS) $(LIBS)
EXPORT_DYNAMIC=-Xlinker --export-dynamic

# The following options are mainly for development use and can be used
# to check that the code seems to conform to some standards. Depending
# on the version and vendor of you libc, the options may or may not have
# expected results. If you define one of C99_SOURCE or XOPEN_SOURCE, you
# may also have to define the other.

#C89_SOURCE=-ansi

#POSIX_SOURCE=@_D_POSIX_SOURCE@

# Most systems
#XOPEN_SOURCE=-D_XOPEN_SOURCE -D_XOPEN_SOURCE_EXTENDED
# SunOS, (Irix)
#XOPEN_SOURCE=-D__EXTENSIONS__

#C99_SOURCE=-std=c99 -DCF_HAS_VA_COPY

# The -DCF_HAS_VA_COPY option should allow for some optimisations, and
# in some cases simply defining
C99_SOURCE=@_DCF_HAS_VA_COPY@
# might allow for those optimisations to be taken without any  special
# libc or compiler options.


##
## make depend
##

DEPEND_FILE=.depend
DO_MAKE_DEPEND=$(CC) -MM $(DEFINES) $(EXTRA_INCLUDES) $(INCLUDES)
MAKE_DEPEND=$(DO_MAKE_DEPEND) $(SOURCES) > $(DEPEND_FILE)

##
## AR
##

AR=@AR@
ARFLAGS=cr
RANLIB=@RANLIB@


##
## Install & strip
##

INSTALL=@INSTALL@
INSTALLDIR=mkdir -p

BIN_MODE=755
DATA_MODE=644

STRIP=@STRIP@

RM=rm
